---
const { class: className } = Astro.props;
---

<button 
  id="theme-toggle"
  class={`theme-toggle ${className || ''}`}
  title="Toggle dark/light mode"
  aria-label="Toggle dark/light mode"
>
  <svg width="24" height="24" viewBox="0 0 800 800" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
    <path d="M400 800C620.914 800 800 620.914 800 400C800 179.086 620.914 0 400 0C179.086 0 0 179.086 0 400C0 620.914 179.086 800 400 800ZM400 100C565.685 100 700 234.315 700 400C700 565.685 565.685 700 400 700V100Z"/>
  </svg>
</button>

<style>
  .theme-toggle {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.5rem;
    border: none;
    background: none;
    cursor: pointer;
    color: var(--text-color);
    transition: color 0.3s ease;
  }

  .theme-toggle:hover {
    color: var(--accent-color);
  }

  /* Rotation animation for theme toggle */
  .theme-toggle svg {
    transition: transform 0.5s ease;
  }

  :global(.dark) .theme-toggle svg {
    transform: rotate(180deg);
  }
</style>

<script>
  // Theme toggle functionality
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle('dark');

    const isDark = element.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  }

  document.getElementById('theme-toggle')?.addEventListener('click', handleToggleClick);
</script>
