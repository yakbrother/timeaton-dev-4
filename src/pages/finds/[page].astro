---
import { getCollection } from 'astro:content';
import type { GetStaticPathsOptions } from 'astro';
import Breadcrumbs from '../../components/Breadcrumbs.astro';
import Layout from '../../layouts/Layout.astro';
import LinkCard from '../../components/LinkCard.astro';
import Pagination from '../../components/Pagination.astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allFinds = await getCollection('finds');
  
  const finds = allFinds
    .filter(find => find.data.public)
    .sort((a, b) => b.data.publicationDate.valueOf() - a.data.publicationDate.valueOf());

  const pages = paginate(finds, { pageSize: 40 });
  
  return pages;
}

const { page } = Astro.props;
const pageTitle = page.currentPage === 1 ? 'Today I Found...' : `Today I Found... - Page ${page.currentPage}`;
---

<Layout title={pageTitle}>
  <div class="page-content">
    <Breadcrumbs path={['Found']} />
    <h1>Today I Found...</h1>
    <hr/>
    
    <div class="finds-grid">
      {page.data.map((find) => (
        <LinkCard
          type={find.data.type}
          title={find.data.title}
          description={find.data.description}
          link={find.data.link}
          publicationDate={find.data.publicationDate}
        />
      ))}
    </div>

    <Pagination
      currentPage={page.currentPage}
      totalPages={page.lastPage}
      baseUrl="/finds/"
    />
  </div>
</Layout>

<style>
  .finds-container {
    max-width: var(--content-width);
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  h1 {
    font-size: var(--step-4);
    margin: 0 0 2rem;
    color: var(--color-text-base);
    width: 50%;
  }


  .finds-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

</style>
