---
import { getCollection } from 'astro:content';
import type { GetStaticPathsOptions } from 'astro';
import Breadcrumbs from '../../components/Breadcrumbs.astro';
import Layout from '../../layouts/Layout.astro';
import PostCard from '../../components/PostCard.astro';
import Pagination from '../../components/Pagination.astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = (await getCollection('posts'))
    .filter(post => post.data.public)
    .sort((a, b) => b.data.publicationDate.valueOf() - a.data.publicationDate.valueOf());
  
  return paginate(posts, { pageSize: 10 });
}

const { page } = Astro.props;
const pageTitle = page.currentPage === 1 ? 'Blog Posts' : `Blog Posts - Page ${page.currentPage}`;
---

<Layout title={pageTitle}>
  <div class="page-content">
    <Breadcrumbs path={['posts']} />
    <h1>Blog Posts</h1>
    <hr/>
    
    <div class="posts-grid">
      {page.data.map((post) => (
        <PostCard
          category={post.data.category}
          title={post.data.title}
          description={post.data.description}
          publicationDate={post.data.publicationDate}
          slug={post.data.slug}
        />
      ))}
    </div>

    <Pagination 
      currentPage={page.currentPage} 
      totalPages={page.lastPage} 
      baseUrl="/posts/"
    />
  </div>
</Layout>

<style>
  .posts-container {
    max-width: var(--content-width);
    margin: 0 auto;
    padding: 2rem;
  }

  h1 {
    font-size: var(--size-step-4);
    margin-bottom: 2rem;
  }

  hr {
    padding-bottom: var(--gap);
  }

  .posts-grid {
    display: grid;
    grid-template-columns: repeat(1fr);
    gap: 2rem;
  }

</style>
